/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Color,
} from './components/product-design/launch/color';

export namespace Components {
  interface AirbnbHomepage {}
  interface CardStack {
    /**
    * The collection of cards to render
    */
    'cards': any[];
  }
  interface LaunchUiButton {
    'alignCenter': boolean;
    'alignLeft': boolean;
    'alignRight': boolean;
    /**
    * Displays the button at full-width.
    */
    'block': boolean;
    /**
    * Renders the button with a bold font weight.
    */
    'bold': boolean;
    /**
    * If the button is in a busy active state.
    */
    'busy': boolean;
    /**
    * The color display of the button.
    */
    'color': Color;
    /**
    * If the button is disabled and cannot be interacted with.
    */
    'disabled': boolean;
    /**
    * The filled color style for the button. `solid` renders the button with a solid background. `outline` renders the button only as a border. `clear` is a transparent button.
    */
    'fill': 'outline' | 'solid' | 'clear';
    /**
    * Renders the button large.
    */
    'lg': boolean;
    /**
    * Renders the button as a text link.
    */
    'link': boolean;
    /**
    * The rendered shape of the button. `rounded` has a small border radius, `square` has no border radius and `pill` has the maximum border radius.
    */
    'shape': 'rounded' | 'square' | 'pill' | 'circle';
    /**
    * Renders the button small.
    */
    'sm': boolean;
    /**
    * Softened color palette of the button.
    */
    'soft': boolean;
    /**
    * The type of button to render
    */
    'type': 'submit' | 'button' | 'reset';
    /**
    * Renders the button extra large.
    */
    'xl': boolean;
  }
}

declare global {


  interface HTMLAirbnbHomepageElement extends Components.AirbnbHomepage, HTMLStencilElement {}
  var HTMLAirbnbHomepageElement: {
    prototype: HTMLAirbnbHomepageElement;
    new (): HTMLAirbnbHomepageElement;
  };

  interface HTMLCardStackElement extends Components.CardStack, HTMLStencilElement {}
  var HTMLCardStackElement: {
    prototype: HTMLCardStackElement;
    new (): HTMLCardStackElement;
  };

  interface HTMLLaunchUiButtonElement extends Components.LaunchUiButton, HTMLStencilElement {}
  var HTMLLaunchUiButtonElement: {
    prototype: HTMLLaunchUiButtonElement;
    new (): HTMLLaunchUiButtonElement;
  };
  interface HTMLElementTagNameMap {
    'airbnb-homepage': HTMLAirbnbHomepageElement;
    'card-stack': HTMLCardStackElement;
    'launch-ui-button': HTMLLaunchUiButtonElement;
  }
}

declare namespace LocalJSX {
  interface AirbnbHomepage {}
  interface CardStack {
    /**
    * The collection of cards to render
    */
    'cards'?: any[];
  }
  interface LaunchUiButton {
    'alignCenter'?: boolean;
    'alignLeft'?: boolean;
    'alignRight'?: boolean;
    /**
    * Displays the button at full-width.
    */
    'block'?: boolean;
    /**
    * Renders the button with a bold font weight.
    */
    'bold'?: boolean;
    /**
    * If the button is in a busy active state.
    */
    'busy'?: boolean;
    /**
    * The color display of the button.
    */
    'color'?: Color;
    /**
    * If the button is disabled and cannot be interacted with.
    */
    'disabled'?: boolean;
    /**
    * The filled color style for the button. `solid` renders the button with a solid background. `outline` renders the button only as a border. `clear` is a transparent button.
    */
    'fill'?: 'outline' | 'solid' | 'clear';
    /**
    * Renders the button large.
    */
    'lg'?: boolean;
    /**
    * Renders the button as a text link.
    */
    'link'?: boolean;
    /**
    * Event emitted each time the button is clicked
    */
    'onTap'?: (event: CustomEvent<any>) => void;
    /**
    * The rendered shape of the button. `rounded` has a small border radius, `square` has no border radius and `pill` has the maximum border radius.
    */
    'shape'?: 'rounded' | 'square' | 'pill' | 'circle';
    /**
    * Renders the button small.
    */
    'sm'?: boolean;
    /**
    * Softened color palette of the button.
    */
    'soft'?: boolean;
    /**
    * The type of button to render
    */
    'type'?: 'submit' | 'button' | 'reset';
    /**
    * Renders the button extra large.
    */
    'xl'?: boolean;
  }

  interface IntrinsicElements {
    'airbnb-homepage': AirbnbHomepage;
    'card-stack': CardStack;
    'launch-ui-button': LaunchUiButton;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'airbnb-homepage': LocalJSX.AirbnbHomepage & JSXBase.HTMLAttributes<HTMLAirbnbHomepageElement>;
      'card-stack': LocalJSX.CardStack & JSXBase.HTMLAttributes<HTMLCardStackElement>;
      'launch-ui-button': LocalJSX.LaunchUiButton & JSXBase.HTMLAttributes<HTMLLaunchUiButtonElement>;
    }
  }
}


